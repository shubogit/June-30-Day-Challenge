class Solution {
   
   // sort way of solving the prob.
   public int twoCitySchedCost(int[][] costs) {

        int N = costs.length/2;
        int[] ref = new int[N * 2];
        int minCost = 0, index = 0;
        for(int[] cost : costs){
            ref[index++] = cost[1] - cost[0];
            minCost += cost[0];
        }
        Arrays.sort(ref);
        for(int i = 0; i < N; i++){
            minCost += ref[i];
        }
        return minCost;
    }
      // Heap or Priority Queue way of solving the prob.
    public int twoCitySchedCost(int[][] cost) 
    {
        int N=cost.length;
        int ans=0;
        PriorityQueue<Integer> pq=new PriorityQueue<Integer>();
        for(int i=0;i<N;i++)
        {
            ans+=cost[i][0];
            pq.add(cost[i][1]-cost[i][0]);
            if(i>=N/2)
            {
                ans+=pq.poll();
            }
        }
        return ans;
    }
    
}
